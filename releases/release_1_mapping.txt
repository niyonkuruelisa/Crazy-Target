# compiler: R8
# compiler_version: 2.0.88
# min_api: 22
# pg_map_id: c018698
# common_typos_disable
com.google.androidgamesdk.ChoreographerCallback$1 -> com.google.androidgamesdk.ChoreographerCallback$a:
com.google.androidgamesdk.ChoreographerCallback$a -> com.google.androidgamesdk.ChoreographerCallback$b:
com.google.androidgamesdk.SwappyDisplayManager$1 -> com.google.androidgamesdk.SwappyDisplayManager$a:
com.google.androidgamesdk.SwappyDisplayManager$a -> com.google.androidgamesdk.SwappyDisplayManager$b:
    java.util.concurrent.locks.Condition d -> c
    java.util.concurrent.locks.Lock c -> b
com.samsung.android.gamesdk.GameSDKManager -> a.a.a.a.a:
    com.samsung.android.gamesdk.IGameSDKService mService -> a
    float mServiceVersion -> b
    java.lang.String getVersion() -> a
    boolean setCpuBoostMode(int) -> b
    boolean setGpuBoostMode(int) -> c
    void updateServiceVersion() -> d
com.unity.androidnotifications.NotificationCallback -> com.unity.androidnotifications.a:
    void onSentNotification(android.content.Intent) -> a
com.unity.androidnotifications.NotificationChannelWrapper -> com.unity.androidnotifications.b:
    long[] vibrationPattern -> b
    int lockscreenVisibility -> c
    int importance -> a
com.unity.androidnotifications.UnityNotificationManager -> com.unity.androidnotifications.UnityNotificationManager:
    com.unity.androidnotifications.NotificationCallback mNotificationCallback -> a
    android.app.Notification$Builder buildNotification(android.content.Context,android.content.Intent) -> a
    android.content.Intent buildNotificationIntent(android.content.Context,android.content.Intent,android.app.PendingIntent) -> b
    android.content.Intent buildOpenAppIntent(android.content.Intent,android.content.Context,java.lang.Class) -> c
    void cancelPendingNotificationIntent(android.content.Context,int) -> d
    void deleteExpiredNotificationIntent(android.content.Context,java.lang.String) -> e
    android.app.PendingIntent getActivityPendingIntent(android.content.Context,int,android.content.Intent,int) -> f
    android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent,int) -> g
    com.unity.androidnotifications.NotificationChannelWrapper getNotificationChannel(android.content.Context,java.lang.String) -> h
    android.app.NotificationManager getNotificationManager(android.content.Context) -> i
    java.lang.String getSharedPrefsNameByChannelId(java.lang.String) -> j
    java.lang.String getSharedPrefsNameByNotificationId(java.lang.String) -> k
    java.util.List loadNotificationIntents(android.content.Context) -> l
    void notify(android.content.Context,int,android.app.Notification,android.content.Intent) -> m
    void scheduleNotificationIntentAlarm(android.content.Context,android.content.Intent,android.app.PendingIntent) -> n
    void sendNotification(android.content.Context,android.content.Intent) -> o
com.unity.androidnotifications.UnityNotificationManagerOreo -> com.unity.androidnotifications.c:
    com.unity.androidnotifications.NotificationChannelWrapper getOreoNotificationChannel(android.content.Context,java.lang.String) -> p
    com.unity.androidnotifications.NotificationChannelWrapper notificationChannelToWrapper(android.app.NotificationChannel) -> q
com.unity.androidnotifications.UnityNotificationUtilities -> com.unity.androidnotifications.d:
    android.content.Intent deserializeNotificationIntent(android.content.Context,java.lang.String) -> a
    int findResourceIdInContextByName(android.content.Context,java.lang.String) -> b
    java.lang.Class getOpenAppActivity(android.content.Context,boolean) -> c
com.unity3d.JavaPluginPreloader -> a.b.a:
    void loadJavaClass(java.lang.String) -> a
com.unity3d.adaptiveperformance.samsung.GameLoadBooster -> a.b.b.a.a:
    com.samsung.android.gamesdk.GameSDKManager manager -> a
    java.lang.Boolean startupBoostEnabled -> b
    boolean checkStartupBoostEnabled() -> a
    boolean enableBoost() -> b
    boolean isStartupBoostEnabled() -> c
